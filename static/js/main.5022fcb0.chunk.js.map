{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","None","sortType","setSortType","goods","setGoods","useEffect","prevGoods","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BL,mBAASF,GAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRD,GAAS,SAACE,GAAD,OA/BN,SACLH,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAEZ,GAAIG,IAAaP,EAASM,OAASF,EACjC,OAAOH,EAGT,IAAMY,EAAY,YAAOJ,GAEzB,OAAQF,GACN,KAAKP,EAASc,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKjB,EAASmB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAO7C,OAAOhB,EAAaS,EAAaQ,UAAYR,EASnBS,CAAkBV,EACxC,CAAEL,WAAUH,oBACb,CAACG,EAAUH,IAOd,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBhB,IAAaP,EAASc,SAAW,WAAa,IAC3EW,QAAS,WACPjB,EAAYR,EAASc,WAJzB,iCAUA,wBACEU,KAAK,SACLD,UAAS,4BAAuBhB,IAAaP,EAASmB,OAAS,WAAa,IAC5EM,QAAS,WACPjB,EAAYR,EAASmB,SAJzB,4BAUA,wBACEK,KAAK,SACLD,UAAS,4BAAwBnB,EAA0B,GAAb,YAC9CqB,QAAS,WACPpB,GAAeD,IAJnB,sBASEA,GAAcG,IAAaP,EAASM,OAElC,wBACEkB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAzCnBpB,GAAc,QACdG,EAAYR,EAASM,OAqCb,sBAUN,6BACGG,EAAMiB,KAAI,SAACC,GAAD,OAAU,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC/GtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5022fcb0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  None,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  if (sortType === SortType.None && !isReversed) {\n    return goodsFromServer;\n  }\n\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n  }\n\n  // eslint-disable-next-line no-console\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.None);\n  const [goods, setGoods] = useState(goodsFromServer);\n\n  useEffect(() => {\n    setGoods((prevGoods) => getReorderedGoods(prevGoods,\n      { sortType, isReversed }));\n  }, [sortType, isReversed]);\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.None);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed ? 'is-light' : ''}`}\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n        {(isReversed || sortType !== SortType.None)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => reset()}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {goods.map((item) => <li key={item} data-cy=\"Good\">{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}